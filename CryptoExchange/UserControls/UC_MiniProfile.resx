<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        sfF/0Qq0q+l6Ct0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnAddBalance.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAD
        rwAAA68BGB6xfQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAnMSURBVHhe7Z0H
        yDxHHYYTey+JCsYSDSJYYsGoWIlYIsSuoEaxISH2iiWKxoINRRNQYy+YBAsWNAYV7L2XKCjBhia2GCsa
        +/tIBi7Hu7O3u7Ozc3e/Bx74s9+3s+Xe/3e7Uw8IgiAIgv3icvJq8rAL5N9sC3aMS8o7yWfI98jvyD/I
        /3bIz74r+V32OVJSRrBFXFo+RL5f/lm6D3qIlEFZx8hLyaBRDpUnyfOk+yBLSNknymvLoBEOkW+W/5Du
        Q5vD8+Wb5NVlsBAXk0+Vf5TuQ6ohx36yvKgMKnIt+VnpPpQl/LK8rgwqcDd5rnQfxJJyTneVwYw8Uo79
        rj9H8np3gnyoJEi3u0D+zbYXyPdKfteV0Sfn9nAZzMATpbvpOX8s+VBvJIdyY/lC+RPpyu7yP/KxMijI
        IyQ31t1w5zfk/eRF5FQo4/7ym9Idy/lvyV+UoADU5P1Tuhu97m8kYTlQloYyHyV/K92x1+Xr4A4ymMA1
        5K+lu8Hrni6vIufmqvIM6c5h3bNl1BWMhP9xn5Luxq77PDnH//ouOBbPFu5c1v24rHluOwN/bt0NXZXv
        2mPlUhwnOQd3bqs+TAYDOFj+TrqbueqYp+0j5F065GdDebx057Yqzw1XlsGGvFS6G7nqS+QYPi9decjP
        xvAK6cpb9UUy2AAe5P4k3U1MfkaOrX+fIwC0S/RVTdNucJAMeni+dDcwSfs8bQFjmSMAQHP0X6QrN/ls
        GWSg0uWn0t285NPlFOYKADxLunKT1EyWqJzaWaiTdzcu+XN5CTmFOQNA97FfSFd28s4y6OCN0t20JE/c
        U5kzAED/AFd28nUy6OBn0t005Pu1RM/duQPAOeaeBbjGwHC4dDcs+U5ZgrkDAKdIV37yhjJYgxo9d7OS
        95ElqBEAWg9d+clHy2CNk6W7WUh1a6matBoBoCYzV0X8WhmsQb86d7PwTFmKGgGAH0h3DPySbB5qt3gt
        46n1q5LXm03b5Uv7PtnFFSTdtDc117GEn7l9uuTYXTCYxB2jtB+URaHp8gHyh9IdcAlfJru4onT71JBj
        d7FJ+0AJiwaAiox3SHegJaWGrYtWA/Ac6fYpbbEAMKbuC9IdZGmfILtoNQCcs9untEUCwJ/9vnfXJX2m
        7KLVABwv3T6lLRKAB0lXeCu+UnbRagBeLd0+pZ0cgIvLs6QrvBXfJbtoNQCnSbdPaScH4GjpCl6VDhq8
        ivE/kSfyOcx1AfuW7IIx+/xv29RfSncM5Gduny5z8wUwGYU7BnKt7h50mbs3kwPQ1wL3aVmju/WHpTs+
        /l1SL1GCGhVBNFlTT+COgVzrEHKVSpMDkEsqvW/om18DhmG5c0jeWpagRgBuK135SbqUD2HWAORGunxA
        1uK+0p1Dkr7/JagRADqAuvKT95ZDmDUAuarRN8ha8Jcmdy5flyWoEYBvS1c+co3MajKEWQPgCk1SMVQT
        GknceSRvKqcydwBuIV3ZyS/KoSwWADxK1oIpX9w5JF8vpzJ3APoeqp8ih7JoAJg7jw4Ml5Vzw+xbua8B
        3gamztA1ZwCYJib39M+1jTn/RQOQpIPD7yuYCwC+TU5hzgBQYeXKTXJt7pr7/Jd05SHD0N0+STqpZnGF
        tiw3ccrX0lwBoLt3X3iXMNeS+n/cTq3LtC1jh1nNEQAqyhiz4Mpc2p0MADI+cMwgkVPljzrkZ0OhLeWT
        0p1jC+5sAJDv3CUnaaR6ulajz1h3OgDIB7DEjN4c893SnVNL7nwAkAqkobVrU7im/Ip059KakwJA8y8N
        G0+Tr5JUDdf2E9Kd27o0mdaYmo2JIHm9cuewLufurqmkvBa7YycnBYCZOpaG7/iPSHd+TpqvbyNLc3s5
        ZH5imnxrPJ/0dYjZ+gAAtZBfk+4cuyQID5RTFnmgo+yD5eekO0aXfD3UqDmFvQgAsK4PM4C688zJSF16
        MzG0/JbyMrILPrRbSXr0MrDjr9KVmZOgMpdgLfYmAHB5+THpznWITD75fUkTM/JvZhl1vzvEj8rai0/t
        VQCAipfcQNIlpAqYAZ+luq0NYe8CkLi7zHXwrOWv5L3kUuxtAIDv2rfLTWbrLC0tdG+VNTrM5tjrACRu
        IFkMwl3DHPJ+X6J3UgkiACsQBPrRbzql+xDpGEPFy81kS0QADLy/M8Sd7ll98w7mpNmZD50pX1pdNDIC
        sAF01bqnZDlYvrc/JGnCTa+B/Jttb5H8zj3ktqwCFgHYcyIAe04EYM+JAOw5EYA9JwKw50QA9pwIwB7A
        NLkMPHmcZG6B1dlDmKnEfXZJOsas/v66dqdkBGA5riRZL5kpdHNDw6ZqNyYjAPWhypnJMFhkyn0mpbUb
        kxGAulxf5kYCz6HdmIwA1IOJJTZdJ7mkdmMyAlAH+hb0rZU4l3ZjMgIwP/RErv1nf1W7MRkBmB+mvXH3
        vpZ2YzICMC/XkZsswsFiHSdInhNyi1Q4+AxdmUm7MRkBmJeTpLvvq9LdfMooowhAozCGoO9d/+VyKhGA
        RumbTpbxhSUGl0YAGuW50t3zJP0SSxABaJTcuH7qBBgCV4IIQKPkpscfM51sF4sF4AjJq0ttj5HbQG7O
        AUYZl2KxADxGujLn9nS5Dez8X4AIQB4GqLjzRya1GDMHoiMC0Ch9C0uWGnIeAWgUJrJy559kyFqJCSci
        AI3Ch8uIY3cNSabmm0oEoGFOlO4aVmWEM3MjjSUC0DCHSub7d9ex6tmShaiYwYzOokNoNgDXk8y3O8Yz
        pSsTtykAQGufu45a2o3JOQMwZemX70lXJm5bAOgFnFu7cW7txmQEoA6HSxbpdNczt3ZjMgJQjzvKvreC
        ObQbkxGAujDJVe7a5tBuTEYA6kMV8PHyPOmur7R2YzICsByM+mUwKK2GWzk2sC8AjHJlFc0x8l7sysRd
        CcAqhOFIeZykyXt1dG+zo4P7AjCXuxiAHM3ODxABqEMEYM0IwIXtDUDuAWNKa1QEoA6TA5AbnHCKHEsE
        oA6TA3CWdDsiryBjiQDUYXIAzpBuR6SpkgmKxhABqMPkALxYuh2TYxdjZMp2VvqqLTdkn5gcAKYfczsm
        WVFryQWagzyTA8AQpL4l06iBCtpkcgDgNdLtnPybpDtS0B5FAsBMFX19086RN5dBWxQJAGwyVw1LqfJQ
        eKAM2qBYAA6Smy6fynr9R8klVsoMLkyxAMDRkmVQXUHOc+Vpki7LLM58bFjdJ0n32SQHBQBob3YFhdvp
        4ADA0n3Vw3KOCgAPeX01hOF2OCoACVbMXKKrcljOSQGAQ+SpcsjDYdiOkwOQuImkfwC1gu5AYZsWC0CC
        904qg1i3n4ai86U7cNiGxQOwDi2FB8vDwiYdOpw8CIIg2AcOOOB/8ftLv1L0ltMAAAAASUVORK5CYII=
</value>
  </data>
</root>